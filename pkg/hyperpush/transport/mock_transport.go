// Code generated by mockery v1.0.0. DO NOT EDIT.

package transport

import mock "github.com/stretchr/testify/mock"
import packets "github.com/hyperscale/hyperpush/pkg/hyperpush/mqtt/packets"

// MockTransport is an autogenerated mock type for the Transport type
type MockTransport struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockTransport) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Read provides a mock function with given fields:
func (_m *MockTransport) Read() (packets.ControlPacket, error) {
	ret := _m.Called()

	var r0 packets.ControlPacket
	if rf, ok := ret.Get(0).(func() packets.ControlPacket); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(packets.ControlPacket)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Write provides a mock function with given fields: event
func (_m *MockTransport) Write(event packets.ControlPacket) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(packets.ControlPacket) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
